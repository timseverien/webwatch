---
import { getHumanReadableUrl } from '@spectakel/core/src/utils/url';
import Flow from '../../components/Flow.svelte';
import SpecificationName from '../../components/SpecificationName.svelte';
import SpecificationPropertyList from '../../components/SpecificationPropertyList.svelte';
import { getSpecificationsWithId, type SpecificationWithId } from '../../data';
import DefaultLayout from '../../layouts/Default.astro';
import { ROUTES } from '../../routes';

export async function getStaticPaths() {
  const specs = await getSpecificationsWithId();

  return specs
    .map((specification) => [
      {
        params: ROUTES.specification.getParameters(specification),
        props: { specification },
      },
      {
        params:
          ROUTES.specificationWithTruncatedId.getParameters(specification),
        props: { specification },
      },
    ])
    .flat();
}

const { specification } = Astro.props as { specification: SpecificationWithId };

const canonicalUrl = new URL(
  ROUTES.specification.getPath(specification),
  Astro.url,
).toString();
---

<DefaultLayout canonicalUrl={canonicalUrl}>
  <div class="container">
    <Flow>
      <h1><SpecificationName name={specification.name} /></h1>
      <SpecificationPropertyList {specification} />
    </Flow>

    <div>
      <ul>
        {
          specification.links.map((link) => (
            <li>
              <div>
                <b>{link.title}</b>
              </div>
              <a href={link.url} target="_blank">
                {getHumanReadableUrl(link.url)}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</DefaultLayout>

<style>
  .container {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: var(--space-m);
  }
</style>
